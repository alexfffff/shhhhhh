<!DOCTYPE html>
<html lang="en">

<head>

  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <meta name="description" content="">
  <meta name="author" content="">

  <title>Simple Sidebar - Start Bootstrap Template</title>
      <link rel="shortcut icon" href="data:image/x-icon;," type="image/x-icon">

  <!-- Bootstrap core CSS -->
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">

  <!-- Custom styles for this template -->

</head>


<body>

<div class="container">

    <!-- Page header start CHANGE THIS TO NAV BAR-->
    <nav class="navbar navbar-expand-lg navbar-light bg-light border-bottom">
        <button class="btn btn-primary" id="menu-toggle">Hide Friends</button>

        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
          <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse" id="navbarSupportedContent">
          <ul class="navbar-nav ml-auto mt-2 mt-lg-0">
            <li class="nav-item active">
              <a class="nav-link" href="#">Home <span class="sr-only">(current)</span></a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="#">Link</a>
            </li>
            <li class="nav-item dropdown">
              <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Dropdown
              </a>
              <div class="dropdown-menu dropdown-menu-right" aria-labelledby="navbarDropdown">
                <a class="dropdown-item" href="logout">Logout</a>
                <a class="dropdown-item" href="#">Another action. Settings?</a>
                <div class="dropdown-divider"></div>
                <a class="dropdown-item" href="#">Something else here</a>
              </div>
            </li>
          </ul>
        </div>
      </nav>
    <!-- Page header end -->

    <!-- Content wrapper start -->
    <div class="content-wrapper">

        <!-- Row start -->
        <div class="row gutters">

            <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">

                <div class="card m-0">

                    <!-- Row start -->
                    <div class="row no-gutters">
                        <div class="col-xl-4 col-lg-4 col-md-4 col-sm-3 col-3">
                            <div class="bg-light border-right" id="sidebar-wrapper">
                                <div class="d-flex justify-content-center" size><b><big>Active Friends </big></b></div>
                                <div class="list-group list-group-flush" id="activeFriends">
                                    <% friends.forEach(friend => { %>
      	                                <button id="<%= friend.username %>" class="btn btn-light" onclick="chatThisFriend(this.id)"><%= friend.fullname %></button>
                                    <% }); %>
                                </div>
                                <br>
                                <div class="d-flex justify-content-center" size><b><big>Chat Invitations </big></b></div>
                                <div class="list-group list-group-flush" id="chatInvites">
                                </div>
                            </div>
                        </div>
                        <div class="col-xl-8 col-lg-8 col-md-8 col-sm-9 col-9">
                            <div class="selected-user">
                              <span><span id="currChatName" class="d-flex justify-content-center">Start Chatting!</span></span>
                            </div>
                            <div class="chat-container">
                                <ul id="message-container" class="chat-box chatContainerScroll">
                                    
                                </ul>
                                <div class="form-group mt-3 mb-0">
                                    <span><input type="text" id="message" class="form-control" 
                                    placeholder="Send a message..."><button class="btn btn-primary" name ="button" onclick = "sendMessage()">Send</button></span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- Row end -->
                </div>

            </div>

        </div>
        <!-- Row end -->

    </div>
    <!-- Content wrapper end -->

</div>


  <!-- Bootstrap core JavaScript -->
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js" integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49" crossorigin="anonymous"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js" integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy" crossorigin="anonymous"></script>
  
  <!-- Script -->
  <script src='/socket.io/socket.io.js'></script>
  <script>
    $("#menu-toggle").click(function(e) {
      e.preventDefault();
      $("#wrapper").toggleClass("toggled");
    });
    
    var username = '<%= username %>';
  	var userFullname = '<%= fullname %>';
  	var socket = io();
	var myID = -1;
	var currentRoomID = '';
  	var currentRoomName = '';
  	
  	
  	setInterval(function() {
  		socket.emit('get_chat_invites', username)}, 10000);
  		
    setInterval(function() {
    	socket.emit('get_active_friends', username)}, 50000);
		
	  socket.on('welcome', function (data) {
		  currentRoomID = data.id;
		  console.log(data.message);
		  socket.emit('i am client', { message: 'hello!', id: data.id, username: username, userFullname: userFullname});
    });
    
    
    socket.on('onlineFriends', function(data){
      var idNames = [];
      data.forEach(friend => {
        idNames.push(friend.username);
        if (document.getElementById(friend.username) === null) {
          console.log('append: ' + $('#friend.username'));
          $('#activeFriends').append(get_online_list_element(friend));
        }
      });
    console.log(idNames);
      $('#activeFriends').find('button').each(function(index) {
        var currID = $(this).attr("id");
        console.log('user to check:: ' + currID);
        if (!idNames.includes(currID)) {
          console.log('Removing offline user ' + currID);
          $(this).remove();
        }
      });
    });
    
    
    
    socket.on('chatInvitations', function(data){
      var chatIDs = [];
      data.forEach(invite => {
        chatIDs.push(invite.chatID);
        console.log("invite.chatID is: " + invite.chatID);
        if (document.getElementById("inv_" + invite.inviterID + ":" + invite.chatID) === null) {
          console.log('append: ' + invite.chatID);
          $('#chatInvites').append(get_invite_list_element(invite));
        }
      });
      console.log(chatIDs);
      $('#chatInvites').find('button').each(function(index) {
        var currID = $(this).attr("id");
        console.log("removing: " + currID);
        console.log(currID.substr(currID.indexOf(":")+1));
        if (!chatIDs.includes(currID.substr(currID.indexOf(":")+1))) {
          console.log('Removing offline user');
          $(this).remove();
        }
      });
    });
    
    
    
    
      
	  socket.on('message', function (data) { 
		  console.log(data);
    });
      
	  function setUsername() {
		  username = document.getElementById('name').value;
      socket.emit('setUsername', document.getElementById('name').value);
    };

    socket.on('userExists', function(data) {
        document.getElementById('error-container').innerHTML = data;
    });


    function sendMessage() {
    console.log("GOT HERE TO SENDMSG");
        if ($('#message').val().trim() !== '') {
            socket.emit('newChatMsg', {
                message: $('#message').val().trim(),
                sender: username,
                chatID: currentRoomID,
                fullname: userFullname
            });
            $('#message').val('');
            $('#message').focus();
        }
    }
    
    
    function chatThisFriend(userID) {
      console.log(userID);
      var newChatID;
      var newChatName;
      if (username < userID) {
        newChatID = username + ':' + userID;
        newChatName = username + ', ' + userID;
      } else {
          newChatID = userID + ':' + username;
          newChatName = username + ', ' + userID;
      }
      currentRoomID = newChatID;
      currentRoomName = newChatName;
      socket.emit('join_DM', {chatID: newChatID, member: userID});
    }

    socket.on('newmsg', function(data) {
        console.log(data);
        console.log("GOT HERE TO NEWMSG");
        if (username === data.sender) {
        console.log("GOT HERE TO IS USER");
          $('#message-container').append(get_my_msgs(data.fullname, data.message));
          $('#message-container').animate({
            scrollTop: $('#message-container').get(0).scrollHeight
        }, 0);
        } else {
          $('#message-container').append(get_others_msgs(data.fullname, data.message));
          $('#message-container').animate({
            scrollTop: $('#message-container').get(0).scrollHeight
        }, 0);
        }
        
    });


    function joinThisChat(buttonID) {
      console.log(buttonID);
      var targetChatID = buttonID.substr(buttonID.indexOf(":")+1);
      console.log("targetCatID: " + targetChatID);
      currentRoomID = targetChatID;
      socket.emit('accept_invite', {chatID: targetChatID});
    }






    socket.on('get_messages', function(msg) {
      currentRoomName = msg.chatName;
      console.log(currentRoomName);
    	change_chat_name(currentRoomName);
      // clear then populate the messages
      console.log("in get messages");
      console.log(msg);
      
      console.log('messages: ' + JSON.stringify(msg));
      $('#message-container').empty();
      if (msg.messages.length === 0) {
      	console.log("returning");
        return;
      }
      var messages = msg.messages.Items;
      for (var i=0; i<messages.length; i++) {
        var senderName = messages[i].fullname;
        var message = messages[i].message;
        console.log('Adding message: ' + senderName + ' ; ' + message);
        if (messages[i].username === username) {
          $('#message-container').append(get_my_msgs(senderName, message));
        } else {
          $('#message-container').append(get_others_msgs(senderName, message));
        }
      }
    });
    
    
    
    socket.on('get_chatroom', function(msg) {
      console.log('received channel: ' + JSON.stringify(msg));
      if ('chatID' in msg) {
        currentRoomID = msg.chatID;
        currentChannelData = msg;
      }
      if ($('#channel_'+currentChannelId).length == 0) {
        // new channel has been created, add the entry to the list
        console.log('Add new channel to channel list!');
        $('#channel_list').append(get_channel_list_element(currentChannelId, msg.channelName));
      }
      currentRoomName = msg.chatName;
      change_chat_name(currentRoomName);
    });
    
    

    function get_others_msgs(username, message) {
        return '<div class="float-left">\
                <div class="card" style="width: 18rem;">\
                  <div class="card-body">\
                    <h6 class="card-subtitle mb-2 text-muted">'+ username + '</h6>\
                      <p class="card-text">' + message + '</p>\
                  </div>\
                </div><br>\
              </div>'
    }


    function get_my_msgs(username, message) {
      return '<div class="float-right">\
                <div class="card" style="width: 18rem;">\
                  <div class="card-body">\
                    <h6 class="card-subtitle mb-2 text-muted">'+ username + '</h6>\
                      <p class="card-text">' + message + '</p>\
                  </div>\
                </div><br>\
              </div>'
    }

    function change_chat_name(chatroomName) {
      console.log('updating chatroom title to: ' + chatroomName);
      $('#currChatName').text(chatroomName);
    }
    
    function get_online_list_element(friend) {
    console.log("adding firend to active");
      return '<button id="' + friend.username + '" class="btn btn-light" onclick="chatThisFriend(this.id)">' + friend.fullname + '</button>';
    }
    
    
    function get_invite_list_element(invite) {
      return '<button id="inv_' + invite.inviterID + ":" + invite.chatID + '" class="btn btn-light" onclick="joinThisChat(this.id)">' + invite.inviterName + '</button>';
    }
    
    
    
  </script>

</body>

</html>